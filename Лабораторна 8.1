import numpy as np
from math import factorial
x=[0.180,0.185,0.190,0.195,0.200,0.205]
y=[5.5154,5.4669,5.3263,5.1930,5.0664,4.9461]
h = x[1] - x[0]
x1=0.1
x2=0.9
q=(x1 - x[0])/h
q1 = (x2-x[-1])/h
def n(y,j): #обчислення кінцевих різниць

mas=[]
for i in range(len(y)):
mas.append(y[i] - y[i-1])
mas.pop(0)
if j == 1:
return mas
else:
j-=1
return n(mas, j)
#Перша інтерполяційна формула Ньютона

s_1 = y[0]+q*n(y,1)[0]+q*(q-1)*n(y,2)[0]/factorial(2)
s_2 = q*(q-1)*(q-2)*n(y,3)[0]/factorial(3)
s_3 = q*(q-1)*(q-2)*(q-3)*n(y,4)[0]/factorial(4)
s_4 = q*(q-1)*(q-2)*(q-3)*(q-4)*n(y,5)[0]/factorial(5)
n_1 = s_1 + s_2 + s_3 + s_4
print ('The value of a function at a point x1=', x1, 'using Newton*s First Interpolation Formula', round(n_1,5))
